name: Build

on:
  push:
    branches:
    - master
    tags:
    - '*'
  pull_request:

defaults:
  run:
    shell: bash

jobs:
  main:
    strategy:
      matrix:
        target:
        - aarch64-unknown-linux-gnu
        - x86_64-apple-darwin
        - x86_64-pc-windows-msvc
        - x86_64-unknown-linux-musl
        include:
        - target: x86_64-unknown-linux-musl
          os:     ubuntu-latest
          native: true
        - target: x86_64-apple-darwin
          os:     macos-latest
          native: true
        - target: x86_64-pc-windows-msvc
          os:     windows-2016
          native: true
        - target: aarch64-unknown-linux-gnu
          os:     ubuntu-latest
          native: false

    runs-on: ${{matrix.os}}

    env:
      RUSTFLAGS: --deny warnings

    steps:
    - uses: actions/checkout@v2

    # An issue with BSD Tar causes sporadic failures on macOS.
    # c.f https://github.com/actions/cache/issues/403
    - name: Install GNU Tar
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        brew install gnu-tar
        echo /usr/local/opt/gnu-tar/libexec/gnubin > "$GITHUB_PATH"

    - name: Cache Cargo
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ matrix.os }}-${{ matrix.target }} cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Update Ubuntu Packages
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        sudo apt-get update

    - name: Install rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: rustfmt, clippy
        target: ${{ matrix.target }}

    - name: Install AArch64 Toolchain
      if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
      run: sudo apt-get install gcc-aarch64-linux-gnu

    - name: Info
      run: |
        rustup --version
        cargo --version
        # cargo clippy --version

    - name: Format
      run: cargo fmt --all -- --check

    - name: Test
      if: ${{ matrix.native }}
      run: cargo test --all --target ${{ matrix.target }}

    - name: Check Release
      id: check_tag
      shell: bash
      run: |
        tag=${GITHUB_REF##*/}
        if [[ "$tag" =~ [0-9]+.[0-9]+.[0-9]+$ ]]; then
          echo "::set-output name=tag::$tag"
        else
          echo "::set-output name=tag::null"
        fi

    - name: Package
      id: package
      if: ${{ steps.check_tag.outputs.tag != 'null' }}
      shell: bash
      run: |
        set -euxo pipefail

        src=`pwd`
        dist=$src/dist
        bin=mycrypt
        name=$bin-$version-$target
        executable=target/$target/release/$bin

        cargo build --target $target --release 

        if [[ "$RUNNER_OS" == "Windows" ]]; then
          executable=$executable.exe
        fi

        mkdir $dist
        cp $executable $dist
        cd $dist

        if [[ "$RUNNER_OS" == "Windows" ]]; then
            archive=$dist/$name.zip
            7z a $archive *
            echo "::set-output name=archive::`pwd -W`/$name.zip"
        else
            archive=$dist/$name.tar.gz
            tar czf $archive *
            echo "::set-output name=archive::$archive"
        fi

    - name: Publish Archive
      uses: softprops/action-gh-release@v1
      if: ${{ steps.check_tag.outputs.tag != 'null' }}
      with:
        files: ${{ steps.package.outputs.archive }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
